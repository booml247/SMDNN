B <- read.table('SNP_res.txt',header = F)
B <- read.table('R/SNP_res.txt',header = F)
getwd()
gene <- read.table('R/SNP-VEP_res.txt',header = T)
gene
i=9
df <- gene[which(gene[,1]==var[i]),]
var <- unique(gene[,1])
var <- as.character(var)
df <- gene[which(gene[,1]==var[i]),]
df
sym <- unique(df[,6])
sym
gen <- unique(df[,7])
gen
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
gen
a <- [[1,2],[2,3]]
a <- matrix(c(1,2,3,4), ncol=2)
a
append(a,c(1,2))
var
var <- var[1:5]
res <- list()
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
for(j in length(gen)){
append(res, c(var[i], gen[j]))
}
}
res
length(var)
i
i=1
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
gen
j=1
var[i]
gen[j]
append(res, c(var[i], gen[j]))
res <- c()
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
for(j in length(gen)){
append(res, c(var[i], gen[j]))
}
}
res
c(var[i], gen[j])
append(res, c(var[i], gen[j]))
res <- c()
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
res
res <- matrix(res, ncol = 2)
j=3
i=3
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
g3n
gen
i=4
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
gen
res <- c()
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
if(length(gen)==0) {
res <- append(res, c(var[i], NA))
} else{
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
}
res <- matrix(res, ncol = 2)
res
res <- matrix(res, ncol = 2, byrow = T)
res
SNPGeneLink <- function(data){
#import the map dataset
gene <- read.table('R/SNP-VEP_res.txt',header = T)
var <- unique(gene[,1])
var <- as.character(var)
res <- c()
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
if(length(gen)==0) {
res <- append(res, c(var[i], NA))
} else{
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
}
res <- matrix(res, ncol = 2, byrow = T)
names(res) <- c("SNP","Gene")
return(res)
}
SNPGeneLink(c("rs149619941" ,    "rs71509458"))
SNPGeneLink <- function(data){
#import the map dataset
gene <- read.table('R/SNP-VEP_res.txt',header = T)
var <- as.character(data)
res <- c()
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
if(length(gen)==0) {
res <- append(res, c(var[i], NA))
} else{
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
}
res <- matrix(res, ncol = 2, byrow = T)
names(res) <- c("SNP","Gene")
return(res)
}
SNPGeneLink(c("rs149619941" ,    "rs71509458"))
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
if(length(gen)==0) {
res <- append(res, c(var[i], NA))
} else{
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
}
res <- matrix(res, ncol = 2, byrow = T)
colnames(res) <- c("SNP","Gene")
res
car
var
res <- c()
i=1
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
gen
if(length(gen)==0) {
res <- append(res, c(var[i], NA))
} else{
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
res
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
if(length(gen)==0) {
res <- append(res, c(var[i], NA))
} else{
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
}
res
res <- matrix(res, ncol = 2, byrow = T)
res
colnames(res) <- c("SNP","Gene")
res
return(res)
SNPGeneLink(c("rs149619941" ,    "rs71509458"))
dim(res)
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
if(length(gen)==0) {
res <- append(res, c(var[i], NA))
} else{
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
}
res <- as.data.frame(matrix(res, ncol = 2, byrow = T))
res
names(res) <- c("SNP","Gene")
SNPGeneLink <- function(data){
#import the map dataset
gene <- read.table('R/SNP-VEP_res.txt',header = T)
var <- as.character(data)
res <- c()
for(i in 1:length(var)){
#find corresponding genes
df <- gene[which(gene[,1]==var[i]),]
gen <- unique(df[,7])
gen <- as.character(gen)
gen <- gen[which(gen != "-")]
#append to the list
if(length(gen)==0) {
res <- append(res, c(var[i], NA))
} else{
for(j in length(gen)){
res <- append(res, c(var[i], gen[j]))
}
}
}
res <- as.data.frame(matrix(res, ncol = 2, byrow = T))
names(res) <- c("SNP","Gene")
return(res)
}
SNPGeneLink(c("rs149619941" ,    "rs71509458"))
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("rWikiPathways")
pathwaysIDs <- listPathwayIds(species)
library(rWikiPathways)
pathwaysIDs <- listPathwayIds('Homo Sapiens')
pathwaysIDs
pathwaysIDs <- listPathwayIds(species)
pathwaysIDs <- listPathwayIds('Homo sapiens')
pathwaysIDs
pathwaysIDs[1:10,1:19]
pathwaysIDs[1:10]
pathwaysIDs[1:10,1:2]
dim(pathwaysIDs)
i=9
getXrefList(hs.pathwaysIDs[i], "En")
getXrefList(pathwaysIDs[i], "En")
findPathwayIdsByXref('ENSG00000232810','En')
GPMap <- function(data, species, systemCode){
#check whether "rWikiPathways" is installed
if (!requireNamespace("BiocManager", quietly=TRUE)){
install.packages("BiocManager")
BiocManager::install("rWikiPathways")
}
library(rWikiPathways)
#map genes to pathways
res <- c()
for(i in 1:length(data)){
pathway <- findPathwayIdsByXref(data[i], systemCode = systemCode)
if(length(pathway) != 0){
for(j in length(pathway)){
res <- append(res, c(data[i], pathway[j]))
}
} else{
res <- append(res, c(data[i], NA))
}
}
res  <- as.data.frame(matrix(res, ncol = 2, byrow = T))
names(res) <- c("Gene","Pathway")
return(res)
}
GPMap(c("ENSG00000230021", "ENSG00000230022", "ENSG00000230023"), 'Homo sapiens', 'En')
GPMap(c("ENSG00000153574", "ENSG00000231211", "ENSG00000230023"), 'Homo sapiens', 'En')
GPMap(c("ENSG00000153574", "ENSG00000232810", "ENSG00000230023"), 'Homo sapiens', 'En')
length(findPathwayIdsByXref('ENSG00000232810','En'))
res <- c()
data = c("ENSG00000153574", "ENSG00000232810", "ENSG00000230023")
systemCode = 'En'
species = 'Homo sapiens'
pathway <- findPathwayIdsByXref(data[i], systemCode = systemCode)
if(length(pathway) != 0){
for(j in length(pathway)){
res <- append(res, c(data[i], pathway[j]))
}
} else{
res <- append(res, c(data[i], NA))
}
res
i=2
pathway <- findPathwayIdsByXref(data[i], systemCode = systemCode)
pathway
for(j in length(pathway)){
res <- append(res, c(data[i], pathway[j]))
}
res
GPMap <- function(data, species, systemCode){
#check whether "rWikiPathways" is installed
if (!requireNamespace("BiocManager", quietly=TRUE)){
install.packages("BiocManager")
BiocManager::install("rWikiPathways")
}
library(rWikiPathways)
#map genes to pathways
res <- c()
for(i in 1:length(data)){
pathway <- findPathwayIdsByXref(data[i], systemCode = systemCode)
if(length(pathway) != 0){
for(j in 1:length(pathway)){
res <- append(res, c(data[i], pathway[j]))
}
} else{
res <- append(res, c(data[i], NA))
}
}
res  <- as.data.frame(matrix(res, ncol = 2, byrow = T))
names(res) <- c("Gene","Pathway")
return(res)
}
GPMap(c("ENSG00000153574", "ENSG00000232810", "ENSG00000230023"), 'Homo sapiens', 'En')
GPMap(c("ENSG00000153574", "ENSG00000232810", "NA"), 'Homo sapiens', 'En')
source(SGMap.R)
source('SGMap.R')
source('R/SGMap.R')
data <- c("rs149619941", "rs71509458")
mapping <- SGMap(data)
source('R/SGMap.R')
source('R/SGMap.R')
mapping <- SGMap(data)
mapping
SNPs <- unique(mapping[,1])
SNPs
Genes <- unique(mapping[,2])
Genes
link <- matrix(nrow = length(SNPs), ncol = length(Genes))
link
link <- matrix(0, nrow = length(SNPs), ncol = length(Genes))
link
?which
match(SNPs[1],mapping)
SNPs
mspping
mapping
match(SNPs[1],mapping[,1])
mapping <- SGMap(data)
SNPs <- unique(mapping[, 1])
Genes <- unique(mapping[, 2])
link <- matrix(0, nrow = length(SNPs), ncol = length(Genes))
for(i in length(SNPs)){
index_S <- match(SNPs[i], mapping[, 1])
index_G <- match(mapping[index_S, 2], Genes)
link[i, index_G] <- 1
}
link
for(i in 1:length(SNPs)){
index_S <- match(SNPs[i], mapping[, 1])
index_G <- match(mapping[index_S, 2], Genes)
link[i, index_G] <- 1
}
link
mapping <- SGMap(data)
SNPs <- unique(mapping[, 1])
Genes <- unique(mapping[, 2])
link <- matrix(0, nrow = length(SNPs), ncol = length(Genes))
for(i in 1:length(SNPs)){
index_S <- match(SNPs[i], mapping[, 1])
index_G <- match(mapping[index_S, 2], Genes)
link[i, index_G] <- 1
}
link
mapping
link <- matrix(0, nrow = length(SNPs), ncol = length(Genes))
for(i in 1:length(SNPs)){
index_S <- match(SNPs[i], mapping[, 1])
index_G <- match(mapping[index_S, 2], Genes)
link[i, index_G] <- 1
}
link <- matrix(0, nrow = length(SNPs), ncol = length(Genes))
link
for(i in 1:length(SNPs)){
index_S <- match(SNPs[i], mapping[, 1])
index_G <- match(mapping[index_S, 2], Genes)
link[i, index_G] <- 1
}
rownames(link) <- SNPs
colnames(link) <- Genes
link
?unique
SNPs <- unique(mapping[, 1])
Genes <- unique(na.omit(mapping[, 2]))
link <- matrix(0, nrow = length(SNPs), ncol = length(Genes))
for(i in 1:length(SNPs)){
index_S <- match(SNPs[i], mapping[, 1])
index_G <- match(mapping[index_S, 2], Genes)
link[i, index_G] <- 1
}
rownames(link) <- SNPs
colnames(link) <- Genes
link
i=2
index_S <- match(SNPs[i], mapping[, 1])
index_S
SNPs[i]
mapping[, 1]
match(SNPs[i], mapping[, 1])
?match
index_S <- which(mapping[, 1] %in% SNPs[i])
index_S
source('SGLink.R')
source('R/SGLink.R')
SGLink(data)
data <- c("rs149619941", "rs71509458", "rs11316244")
SGLink(data)
data <- c("ENSG00000153574", "ENSG00000232810", "ENSG00000230023")
source('R/GPMap.R')
mapping <- GPMap(data)
mapping <- GPMap(data, species, systemCode)
mapping
Genes <- unique(mapping[, 1])
Paths <- unique(na.omit(mapping[, 2]))
link <- matrix(0, nrow = length(Genes), ncol = length(Paths))
for(i in 1:length(Genes)){
#find the index of the ith SNP in the mapping
index_G <- which(mapping[, 1] %in% Genes[i])
#obtain the corresponding genes
index_P <- match(mapping[index_S, 2], Paths)
link[i, index_P] <- 1
}
rownames(link) <- Genes
colnames(link) <- Paths
link
i=1
index_G <- which(mapping[, 1] %in% Genes[i])
index_G
mapping
index_P <- match(mapping[index_S, 2], Paths)
index_P
Paths
link <- matrix(0, nrow = length(Genes), ncol = length(Paths))
for(i in 1:length(Genes)){
#find the index of the ith SNP in the mapping
index_G <- which(mapping[, 1] %in% Genes[i])
#obtain the corresponding genes
index_P <- match(mapping[index_G, 2], Paths)
link[i, index_P] <- 1
}
rownames(link) <- Genes
colnames(link) <- Paths
link
source('R/GPLinl.R')
source('R/GPLink.R')
GPLink(data, 'Homo sapiens', 'En')
?lm
?findPathwayIdsByXref
?listPathwayIds
library(prcomp)
install.packages("kernlab")
library(kernlab)
?ksvm
source("R/GPLink.R")
GPLink(data, En')
''
GPLink(data, 'En')
source("R/GPLink.R")
GPLink(data, 'En')
